#!/usr/bin/env python
#
# This script open gpxsee with GPX files of the current directory that are close
# to a given location. Current supported location are "rome", "milan" and
# "salerno" and the filter's radius is 150 chilometers.
#
# See GPXSee website for more info: https://www.gpxsee.org/
#
# Copyright (c) 2022-2025 Emanuele Petriglia <inbox@emanuelepetriglia.com>
# All rights reserved. This file is licensed under the MIT license.

import sys
import re
import math
import subprocess
from pathlib import Path

# Returns the distance in meters between two points.
def distance(p1, p2):
    r = 6371e3 # Eart's radius in meters.

    lat1, lon1 = p1
    lat2, lon2 = p2

    # Convert to radians.
    plat1 = lat1 * math.pi/180
    plat2 = lat2 * math.pi/180

    dlat = (lat2 - lat1) * math.pi/180
    dlon = (lon2 - lon1) * math.pi/180

    # This is the equirectangular approximation.
    # Thanks to: http://www.movable-type.co.uk/scripts/latlong.html
    x = dlon * math.cos((plat1 + plat2) / 2)
    y = plat2 - plat1
    d = math.sqrt(x*x + y*y) * r

    return d

locations = {"rome": (41.89074, 12.49247),
             "milan": (45.46464, 9.19205),
             "salerno": (40.67545, 14.79328)}

def main(location):
    if location not in locations:
        print(f"Unrecognized location {location!r}, must be one of {list(locations.keys())}")
        sys.exit(1)

    # Regex to extract the latitude and longitude of the first track point (eg.
    # 'lat="41.7518572" lon="12.8808482"').
    regex = re.compile(r'lat="(?P<lat>([\d.])+)" lon="(?P<lon>([\d.])+)"')

    # It scans all GPX files and save those that are close to the given
    # location.
    saved = []
    for path in Path('.').glob('*.gpx'):
        with path.open() as file:
            # In a GPX file it should be enough to read 1024 character to have
            # the first track point.
            chunk = file.read(1024)

            res = regex.search(chunk)
            if res == None:
                print(f'Skipping {path}, it does not have latitude and longitude')
                continue

            lat = float(res.group('lat'))
            lon = float(res.group('lon'))

            if distance(locations[location], (lat, lon)) < 150000:
                saved.append(path)

    if len(saved) == 0:
        print("No files to load")
        return

    # Last thing to do: run gpxsee with filtered GPX files.
    subprocess.run(["gpxsee"] + saved)

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print('usage: open-gpxsee LOCATION')
        print(f'LOCATION must be one of {list(locations.keys())}')
        sys.exit(1)

    if sys.argv[1] == "--help" or sys.argv[1] == "-h":
        print('usage: open-gpxsee LOCATION')
        print(f'LOCATION must be one of {list(locations.keys())}')
        sys.exit(0)

    main(sys.argv[1])

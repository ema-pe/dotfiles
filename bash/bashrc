#!/usr/bin/env bash
#
# My personal configuration of Bash. It contains my settings and some useful
# scripts that I use ofter.
#
# This file is called every time a shell is started. It is also called by
# '.bash_profile' only once.
#
# Copyright (c) Emanuele Petriglia <inbox@emanuelepetriglia.com> 2018-2019
# This file is lincensed under the MIT license.

# Bash settings {{{

# Enable auto-completion feature.
if [[ -f "/etc/profile.d/bash_completion.sh" ]]; then
  # shellcheck disable=SC1091
  . /etc/profile.d/bash_completion.sh
fi

# }}}

# Global variables {{{

# Bash prompt.
export PS1="[\u@\h \[\e[36m\]\W\[\e[m\]]\\$ "

# Enable SSH support for gpg-agent.
export SSH_AUTH_SOCK="/run/user/$EUID/gnupg/S.gpg-agent.ssh"

# Default editor.
export EDITOR=nvim

export ANDROID_HOME=/home/emanuele/.local/opt/android/
export ANDROID_SDK_ROOT=/home/emanuele/.local/opt/android/
export GRADLE_OPTS="-Dorg.gradle.daemon=false"

# }}}

# Small scripts {{{

# Colorized man pages.
# Thanks to: https://news.ycombinator.com/item?id=12304730
man() {
   LESS_TERMCAP_mb=$(printf "\e[1;31m") \
   LESS_TERMCAP_md=$(printf "\e[1;31m") \
   LESS_TERMCAP_me=$(printf "\e[0m") \
   LESS_TERMCAP_se=$(printf "\e[0m") \
   LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
   LESS_TERMCAP_ue=$(printf "\e[0m") \
   LESS_TERMCAP_us=$(printf "\e[1;32m") \
   command man "$@"
}

# It prints a sorted list of dreams with filename and dream's title.
list-dreams() {
  # If there are not "*.adoc" documents, do not run the for.
  shopt -s failglob

  gawk -e 'FNR == 1 { sub(".adoc", "", FILENAME); sub("= ", "", $0); printf "%-12s - %s\n", FILENAME, $0 }' -- *.adoc
}

# It converts HEIC image files to JPEG. It requires libheif.
heic2jpg() {
  for image in *.HEIC ; do
    heif-convert "$image" "${image/%.HEIC/.jpg}"
  done
}

# scanned makes a PDF file look scanned using ImageMagick.
scanned() {
  local input output

  input="$1"
  output="$2"

  if [[ "$(command -v convert)" ]] ; then
    # Thanks to: https://gist.github.com/andyrbell/25c8632e15d17c83a54602f6acde2724?permalink_comment_id=3302435#gistcomment-3302435
    convert -density 130 "$input" -rotate 0.33 -attenuate 0.15 \
      +noise Multiplicative -colorspace Gray "$output"
  else
    echo "This script requires ImageMagick." >&2
  fi
}

# Convert a KML track file to GPX track.
kml2gpx() {
  local input output

  input="$1"
  output="$2"

  if [[ "$(command -v gpsbabel)" ]] ; then
    gpsbabel -i kml -f "$1" -o gpx -F "$2"
  else
    echo "This script requires gpsbabel" >&2
  fi
}

ssh-jump() {
  local middlehost destination

  middlehost="$1"
  destination="$2"

  echo "ssh -J emanuele@$middlehost $destination"
  ssh -J emanuele@"$middlehost" "$destination"
}

# Automatically restart an SSH connection if it dies.
autossh() {
  while true
  do
    echo "Executing: 'ssh $*'"
    ssh "$@"
    if [ "$?" -ne 255 ]; then
      break
    fi
    clear
    sleep 5
  done
}

# }}}

# Bash history {{{

# More human-readable format.
export HISTTIMEFORMAT="[%F %T] "

# Force prompt to write history after every command.
# http://superuser.com/questions/20900/bash-history-loss
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

# }}}

# Aliases {{{

# It stops Bash to record commands in the current session.
alias forget="unset HISTFILE"

# It downloads videos and then extracts the audio.
alias music-dl='youtube-dl -x --audio-format vorbis'

# It replace spaces to underscore and convert the text in lowercase.
alias renamefull="rename 's/ /_/g' * && rename 'y/A-Z/a-z/' *"

# Rename image files with "IMG_YYYYMMDD_HHMMSS" schema.
alias renameimages="exiv2 -v --Force -r 'IMG_%Y%m%d_%H%M%S'"

# Rename MOV files with "VID_YYYYMMDD_HHMMSS" schema.
alias renamemov="exiftool -ext mov '-FileName<CreationDate' -d 'VID_%Y%m%d_%H%M%S.%%e'"

alias py="python3"

# Enable colors for varous commands.
alias ls="ls --color=auto"
alias grep="grep --color=auto"
alias tree="tree -C"

# Enable ls aliases.
alias ll="ls -l"
alias la="ls -A"
alias l="ls -CF"

alias ..="cd .."

# Prints all installed packages that requires the given package.
alias why="rpm -q --whatrequires"

# Start NeoVIM instead of VIM.
alias vim="nvim"

[ "$TERM" = "xterm-kitty" ] && alias ssh="kitty +kitten ssh"

# }}}

# vim:foldmethod=marker
